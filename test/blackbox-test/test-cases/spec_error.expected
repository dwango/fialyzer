test-cases/spec_error.erl:10: foo: Type spec unmatch;
  success type: fun((111) -> 'ok')
  type spec   : fun((number()) -> 'true' | 'false')
test-cases/spec_error.erl:13: int1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:16: int2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:19: int3: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:22: int4: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:25: list1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [none()])
test-cases/spec_error.erl:28: list2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [any()])
test-cases/spec_error.erl:31: list3: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:34: list4: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:37: list5: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:40: string1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [number()])
test-cases/spec_error.erl:43: string2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [number()])
test-cases/spec_error.erl:46: map1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> map())
test-cases/spec_error.erl:49: map2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> map())
test-cases/spec_error.erl:53: bar: Type spec unmatch;
  success type: fun((number(), number()) -> 'ok')
  type spec   : fun(('true' | 'false', number()) -> 'ok')
test-cases/spec_error.erl:63: user_error: Type spec unmatch;
  success type: fun(({'typ1', 'typ2'}) -> 'ok')
  type spec   : fun(({'typ2', 'typ1'}) -> 'ok')
