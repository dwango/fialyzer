test-cases/spec_error.erl:-1: foo: Type spec unmatch;
  success type: fun((111) -> 'ok')
  type spec   : fun((number()) -> 'true' | 'false')
test-cases/spec_error.erl:-1: int1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:-1: int2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:-1: int3: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:-1: int4: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> number())
test-cases/spec_error.erl:-1: list1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [none()])
test-cases/spec_error.erl:-1: list2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [any()])
test-cases/spec_error.erl:-1: list3: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:-1: list4: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:-1: list5: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [atom()])
test-cases/spec_error.erl:-1: string1: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [number()])
test-cases/spec_error.erl:-1: string2: Type spec unmatch;
  success type: fun(() -> 'ok')
  type spec   : fun(() -> [number()])
test-cases/spec_error.erl:-1: bar: Type spec unmatch;
  success type: fun((number(), number()) -> 'ok')
  type spec   : fun(('true' | 'false', number()) -> 'ok')
